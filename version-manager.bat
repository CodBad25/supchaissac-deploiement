@echo off
title SupChaissac - Gestionnaire de Versions
color 0D
setlocal enabledelayedexpansion

:: Configuration
set "APP_NAME=SupChaissac"
set "VERSIONS_DIR=versions"
set "CURRENT_VERSION_FILE=.current-version"

echo.
echo ========================================
echo    %APP_NAME% - GESTIONNAIRE DE VERSIONS
echo ========================================
echo.

:MENU
echo Choisissez une action :
echo.
echo [1] üì¶ Cr√©er une nouvelle version
echo [2] üìã Lister les versions disponibles
echo [3] üîÑ Basculer vers une version
echo [4] üóëÔ∏è  Supprimer une version
echo [5] üìä Comparer les versions
echo [6] üè∑Ô∏è  Taguer la version actuelle
echo [7] üì§ Exporter une version
echo [8] üì• Importer une version
echo [9] ‚ùå Quitter
echo.
set /p choice="Votre choix (1-9): "

if "%choice%"=="1" goto CREATE_VERSION
if "%choice%"=="2" goto LIST_VERSIONS
if "%choice%"=="3" goto SWITCH_VERSION
if "%choice%"=="4" goto DELETE_VERSION
if "%choice%"=="5" goto COMPARE_VERSIONS
if "%choice%"=="6" goto TAG_VERSION
if "%choice%"=="7" goto EXPORT_VERSION
if "%choice%"=="8" goto IMPORT_VERSION
if "%choice%"=="9" goto EXIT

echo Choix invalide. Veuillez r√©essayer.
goto MENU

:CREATE_VERSION
echo.
echo ========================================
echo    CREATION NOUVELLE VERSION
echo ========================================
echo.

:: G√©n√©rer timestamp
set "TIMESTAMP=%date:~-4,4%-%date:~-10,2%-%date:~-7,2%_%time:~0,2%-%time:~3,2%-%time:~6,2%"
set "TIMESTAMP=!TIMESTAMP: =0!"

set /p version_name="Nom de la version (d√©faut: v%TIMESTAMP%): "
if "%version_name%"=="" set "version_name=v%TIMESTAMP%"

set /p description="Description de la version: "
if "%description%"=="" set "description=Version cr√©√©e le %date% √† %time%"

echo.
echo Cr√©ation de la version "%version_name%"...

:: Cr√©er le dossier versions s'il n'existe pas
if not exist "%VERSIONS_DIR%" mkdir "%VERSIONS_DIR%"

:: Cr√©er le dossier de la version
set "VERSION_PATH=%VERSIONS_DIR%\%version_name%"
if exist "%VERSION_PATH%" (
    echo ‚ùå La version "%version_name%" existe d√©j√† !
    pause
    goto MENU
)

mkdir "%VERSION_PATH%"

:: Copier les fichiers importants (exclure node_modules, tmp, logs)
echo Copie des fichiers...
xcopy "client" "%VERSION_PATH%\client\" /E /I /Q /EXCLUDE:exclude-list.txt >nul 2>&1
xcopy "server" "%VERSION_PATH%\server\" /E /I /Q >nul 2>&1
xcopy "shared" "%VERSION_PATH%\shared\" /E /I /Q >nul 2>&1
xcopy "docs" "%VERSION_PATH%\docs\" /E /I /Q >nul 2>&1
xcopy "scripts" "%VERSION_PATH%\scripts\" /E /I /Q >nul 2>&1

:: Copier les fichiers de configuration
copy "package.json" "%VERSION_PATH%\" >nul 2>&1
copy "package-lock.json" "%VERSION_PATH%\" >nul 2>&1
copy "tsconfig.json" "%VERSION_PATH%\" >nul 2>&1
copy "vite.config.ts" "%VERSION_PATH%\" >nul 2>&1
copy "tailwind.config.ts" "%VERSION_PATH%\" >nul 2>&1
copy "drizzle.config.ts" "%VERSION_PATH%\" >nul 2>&1
copy ".env.example" "%VERSION_PATH%\" >nul 2>&1

:: Copier la base de donn√©es si elle existe
if exist "data\supchaissac.db" (
    if not exist "%VERSION_PATH%\data" mkdir "%VERSION_PATH%\data"
    copy "data\supchaissac.db" "%VERSION_PATH%\data\" >nul 2>&1
    echo ‚úÖ Base de donn√©es incluse
)

:: Cr√©er le fichier de m√©tadonn√©es
(
echo {
echo   "name": "%version_name%",
echo   "description": "%description%",
echo   "created": "%date% %time%",
echo   "creator": "%USERNAME%",
echo   "machine": "%COMPUTERNAME%",
echo   "size": "calculating...",
echo   "files": "calculating..."
echo }
) > "%VERSION_PATH%\version-info.json"

:: Calculer la taille
for /f %%i in ('dir "%VERSION_PATH%" /s /-c ^| find "bytes"') do set "VERSION_SIZE=%%i"

echo ‚úÖ Version "%version_name%" cr√©√©e avec succ√®s !
echo üìÅ Emplacement : %VERSION_PATH%
echo üìä Taille : %VERSION_SIZE%
echo üìù Description : %description%
echo.

:: Mettre √† jour la version actuelle
echo %version_name% > "%CURRENT_VERSION_FILE%"

pause
goto MENU

:LIST_VERSIONS
echo.
echo ========================================
echo    VERSIONS DISPONIBLES
echo ========================================
echo.

if not exist "%VERSIONS_DIR%" (
    echo ‚ùå Aucune version trouv√©e.
    echo    Cr√©ez votre premi√®re version avec l'option 1.
    pause
    goto MENU
)

:: Afficher la version actuelle
if exist "%CURRENT_VERSION_FILE%" (
    set /p current_version=<"%CURRENT_VERSION_FILE%"
    echo üéØ Version actuelle : !current_version!
    echo.
)

echo üì¶ Versions disponibles :
echo.

set "count=0"
for /d %%i in ("%VERSIONS_DIR%\*") do (
    set /a count+=1
    set "version_name=%%~ni"
    
    echo [!count!] !version_name!
    
    if exist "%%i\version-info.json" (
        for /f "tokens=2 delims=:" %%j in ('findstr "description" "%%i\version-info.json"') do (
            set "desc=%%j"
            set "desc=!desc:~2,-2!"
            echo     üìù !desc!
        )
        for /f "tokens=2 delims=:" %%j in ('findstr "created" "%%i\version-info.json"') do (
            set "created=%%j"
            set "created=!created:~2,-2!"
            echo     üìÖ !created!
        )
    )
    echo.
)

if %count%==0 (
    echo ‚ùå Aucune version trouv√©e.
)

pause
goto MENU

:SWITCH_VERSION
echo.
echo ========================================
echo    BASCULER VERS UNE VERSION
echo ========================================
echo.

call :LIST_VERSIONS_SIMPLE
echo.
set /p version_choice="Nom de la version √† activer: "

if not exist "%VERSIONS_DIR%\%version_choice%" (
    echo ‚ùå Version "%version_choice%" introuvable !
    pause
    goto MENU
)

echo.
echo ‚ö†Ô∏è  ATTENTION : Cette op√©ration va :
echo 1. Sauvegarder la version actuelle
echo 2. Remplacer les fichiers par la version "%version_choice%"
echo 3. Red√©marrer l'application
echo.
set /p confirm="Continuer ? (O/N): "
if /i not "%confirm%"=="O" goto MENU

:: Cr√©er une sauvegarde de la version actuelle
echo üíæ Sauvegarde de la version actuelle...
call :CREATE_VERSION_SILENT "backup-before-switch"

:: Restaurer la version choisie
echo üîÑ Restauration de la version "%version_choice%"...
xcopy "%VERSIONS_DIR%\%version_choice%\*" "." /E /Y /Q >nul

:: Mettre √† jour la version actuelle
echo %version_choice% > "%CURRENT_VERSION_FILE%"

echo ‚úÖ Basculement vers "%version_choice%" termin√© !
echo.
echo üöÄ Red√©marrage recommand√© de l'application.
pause
goto MENU

:DELETE_VERSION
echo.
echo ========================================
echo    SUPPRIMER UNE VERSION
echo ========================================
echo.

call :LIST_VERSIONS_SIMPLE
echo.
set /p version_to_delete="Nom de la version √† supprimer: "

if not exist "%VERSIONS_DIR%\%version_to_delete%" (
    echo ‚ùå Version "%version_to_delete%" introuvable !
    pause
    goto MENU
)

:: V√©rifier si c'est la version actuelle
if exist "%CURRENT_VERSION_FILE%" (
    set /p current_version=<"%CURRENT_VERSION_FILE%"
    if "!current_version!"=="%version_to_delete%" (
        echo ‚ùå Impossible de supprimer la version actuelle !
        echo    Basculez vers une autre version d'abord.
        pause
        goto MENU
    )
)

echo.
echo ‚ö†Ô∏è  ATTENTION : Suppression d√©finitive de "%version_to_delete%"
echo.
set /p confirm="√ätes-vous s√ªr ? (O/N): "
if /i not "%confirm%"=="O" goto MENU

rmdir /s /q "%VERSIONS_DIR%\%version_to_delete%"
echo ‚úÖ Version "%version_to_delete%" supprim√©e.
pause
goto MENU

:TAG_VERSION
echo.
echo ========================================
echo    TAGUER LA VERSION ACTUELLE
echo ========================================
echo.

set /p tag_name="Nom du tag (ex: stable, release-1.0): "
set /p tag_description="Description du tag: "

if exist "%CURRENT_VERSION_FILE%" (
    set /p current_version=<"%CURRENT_VERSION_FILE%"
    echo üè∑Ô∏è  Tag "%tag_name%" ajout√© √† la version !current_version!
    
    :: Cr√©er un fichier de tag
    (
    echo Tag: %tag_name%
    echo Description: %tag_description%
    echo Date: %date% %time%
    echo Version: !current_version!
    ) > "%VERSIONS_DIR%\!current_version!\tag-%tag_name%.txt"
    
    echo ‚úÖ Tag cr√©√© avec succ√®s !
) else (
    echo ‚ùå Aucune version actuelle d√©finie.
)

pause
goto MENU

:EXPORT_VERSION
echo.
echo ========================================
echo    EXPORTER UNE VERSION
echo ========================================
echo.

call :LIST_VERSIONS_SIMPLE
echo.
set /p version_to_export="Version √† exporter: "

if not exist "%VERSIONS_DIR%\%version_to_export%" (
    echo ‚ùå Version introuvable !
    pause
    goto MENU
)

set "export_name=%version_to_export%_%date:~-4,4%-%date:~-10,2%-%date:~-7,2%.zip"
echo üì¶ Cr√©ation de l'archive %export_name%...

powershell -command "Compress-Archive -Path '%VERSIONS_DIR%\%version_to_export%\*' -DestinationPath '%export_name%'"

echo ‚úÖ Version export√©e : %export_name%
pause
goto MENU

:: ========================================
:: FONCTIONS UTILITAIRES
:: ========================================

:LIST_VERSIONS_SIMPLE
echo Versions disponibles :
for /d %%i in ("%VERSIONS_DIR%\*") do (
    echo - %%~ni
)
exit /b 0

:CREATE_VERSION_SILENT
set "silent_name=%~1"
if "%silent_name%"=="" set "silent_name=auto-backup"

if not exist "%VERSIONS_DIR%" mkdir "%VERSIONS_DIR%"
set "VERSION_PATH=%VERSIONS_DIR%\%silent_name%"
if exist "%VERSION_PATH%" rmdir /s /q "%VERSION_PATH%"
mkdir "%VERSION_PATH%"

xcopy "client" "%VERSION_PATH%\client\" /E /I /Q >nul 2>&1
xcopy "server" "%VERSION_PATH%\server\" /E /I /Q >nul 2>&1
xcopy "shared" "%VERSION_PATH%\shared\" /E /I /Q >nul 2>&1
copy "package.json" "%VERSION_PATH%\" >nul 2>&1
copy "*.ts" "%VERSION_PATH%\" >nul 2>&1

exit /b 0

:EXIT
echo.
echo ========================================
echo    Gestionnaire de versions ferm√©
echo ========================================
echo.
exit /b 0
