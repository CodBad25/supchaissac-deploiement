#!/usr/bin/env node

// üîç Script pour v√©rifier le r√¥le de l'admin

import dotenv from 'dotenv';
import postgres from 'postgres';

// Charger les variables d'environnement
dotenv.config();

async function checkAdminRole() {
  const databaseUrl = process.env.DATABASE_URL;
  
  if (!databaseUrl) {
    console.log('‚ùå DATABASE_URL non d√©finie');
    process.exit(1);
  }
  
  console.log('üîç V√©rification du r√¥le admin...');
  
  let sql;
  
  try {
    // Cr√©er la connexion
    sql = postgres(databaseUrl, {
      ssl: 'require',
      max: 1,
    });
    
    console.log('üîå Connexion √† Neon...');
    
    // R√©cup√©rer tous les utilisateurs
    const users = await sql`
      SELECT id, username, name, role, in_pacte 
      FROM users 
      ORDER BY role, name
    `;
    
    console.log(`\nüë• ${users.length} utilisateurs trouv√©s:\n`);
    
    users.forEach(user => {
      const pacteStatus = user.role === 'TEACHER' ? (user.in_pacte ? ' [PACTE]' : ' [HORS PACTE]') : '';
      console.log(`   ${user.id}. ${user.name} (${user.username}) - ${user.role}${pacteStatus}`);
    });
    
    // V√©rifier sp√©cifiquement l'admin
    const adminUsers = users.filter(u => u.username === 'admin@example.com');
    
    if (adminUsers.length === 0) {
      console.log('\n‚ùå Aucun utilisateur admin@example.com trouv√© !');
    } else {
      const admin = adminUsers[0];
      console.log(`\nüîç Utilisateur admin@example.com:`);
      console.log(`   ID: ${admin.id}`);
      console.log(`   Nom: ${admin.name}`);
      console.log(`   R√¥le: ${admin.role}`);
      
      if (admin.role !== 'ADMIN') {
        console.log(`\n‚ö†Ô∏è  PROBL√àME: Le r√¥le devrait √™tre ADMIN mais c'est ${admin.role}`);
        console.log('üîß Correction du r√¥le...');
        
        await sql`
          UPDATE users 
          SET role = 'ADMIN' 
          WHERE username = 'admin@example.com'
        `;
        
        console.log('‚úÖ R√¥le corrig√© en ADMIN');
      } else {
        console.log('‚úÖ R√¥le correct: ADMIN');
      }
    }
    
  } catch (error) {
    console.log('‚ùå Erreur:', error.message);
    process.exit(1);
  } finally {
    if (sql) {
      await sql.end();
    }
  }
}

// Ex√©cuter la v√©rification
checkAdminRole();
