@echo off
title SupChaissac - Gestionnaire de D√©ploiement
color 0A
setlocal enabledelayedexpansion

:: Configuration
set "APP_NAME=SupChaissac"
set "VERSION=2025-08-26"
set "PORT=5000"
set "BACKUP_DIR=backups"

echo.
echo ========================================
echo    %APP_NAME% - GESTIONNAIRE DE DEPLOIEMENT
echo    Version: %VERSION%
echo ========================================
echo.

:MENU
echo Choisissez une option :
echo.
echo [1] üöÄ D√©ploiement Complet (Recommand√©)
echo [2] üîß D√©ploiement Rapide (D√©veloppement)
echo [3] üì¶ Cr√©er une Sauvegarde
echo [4] üîÑ Mise √† Jour depuis Git
echo [5] üß™ Mode Test
echo [6] üåê D√©ploiement Production
echo [7] üìä V√©rification Syst√®me
echo [8] üõ†Ô∏è  Maintenance
echo [9] ‚ùå Quitter
echo.
set /p choice="Votre choix (1-9): "

if "%choice%"=="1" goto DEPLOY_COMPLETE
if "%choice%"=="2" goto DEPLOY_QUICK
if "%choice%"=="3" goto CREATE_BACKUP
if "%choice%"=="4" goto UPDATE_GIT
if "%choice%"=="5" goto TEST_MODE
if "%choice%"=="6" goto PRODUCTION_MODE
if "%choice%"=="7" goto SYSTEM_CHECK
if "%choice%"=="8" goto MAINTENANCE
if "%choice%"=="9" goto EXIT

echo Choix invalide. Veuillez r√©essayer.
goto MENU

:DEPLOY_COMPLETE
echo.
echo ========================================
echo    DEPLOIEMENT COMPLET
echo ========================================
echo.
echo Ce processus va :
echo 1. V√©rifier le syst√®me
echo 2. Cr√©er une sauvegarde
echo 3. Installer/mettre √† jour les d√©pendances
echo 4. Nettoyer le port %PORT%
echo 5. D√©marrer l'application
echo 6. Ouvrir le navigateur
echo.
set /p confirm="Continuer ? (O/N): "
if /i not "%confirm%"=="O" goto MENU

call :SYSTEM_CHECK_FUNC
if !errorlevel! neq 0 goto MENU

call :CREATE_BACKUP_FUNC
call :CLEAN_PORT
call :INSTALL_DEPS
call :START_APP
goto MENU

:DEPLOY_QUICK
echo.
echo ========================================
echo    DEPLOIEMENT RAPIDE
echo ========================================
echo.
call :CLEAN_PORT
call :START_APP
goto MENU

:CREATE_BACKUP
echo.
echo ========================================
echo    CREATION DE SAUVEGARDE
echo ========================================
echo.
call :CREATE_BACKUP_FUNC
goto MENU

:UPDATE_GIT
echo.
echo ========================================
echo    MISE A JOUR DEPUIS GIT
echo ========================================
echo.
echo V√©rification du repository Git...
git status >nul 2>&1
if !errorlevel! neq 0 (
    echo ‚ùå Ce dossier n'est pas un repository Git.
    echo    Initialisation recommand√©e pour les futures mises √† jour.
    pause
    goto MENU
)

echo R√©cup√©ration des derni√®res modifications...
git pull origin main
if !errorlevel! neq 0 (
    echo ‚ö†Ô∏è  Erreur lors de la mise √† jour Git.
    pause
    goto MENU
)

echo ‚úÖ Mise √† jour Git termin√©e.
call :INSTALL_DEPS
pause
goto MENU

:TEST_MODE
echo.
echo ========================================
echo    MODE TEST
echo ========================================
echo.
echo D√©marrage en mode test sur le port 5001...
set "PORT=5001"
call :CLEAN_PORT
call npm run test
pause
goto MENU

:PRODUCTION_MODE
echo.
echo ========================================
echo    DEPLOIEMENT PRODUCTION
echo ========================================
echo.
echo ‚ö†Ô∏è  ATTENTION : Mode Production
echo.
echo Ce mode va :
echo 1. V√©rifier la s√©curit√©
echo 2. Optimiser les performances
echo 3. Configurer les logs
echo 4. D√©marrer en mode production
echo.
set /p confirm="√ätes-vous s√ªr ? (O/N): "
if /i not "%confirm%"=="O" goto MENU

call :SECURITY_CHECK
call :PRODUCTION_BUILD
call :START_PRODUCTION
goto MENU

:SYSTEM_CHECK
echo.
echo ========================================
echo    VERIFICATION SYST√àME
echo ========================================
echo.
call :SYSTEM_CHECK_FUNC
pause
goto MENU

:MAINTENANCE
echo.
echo ========================================
echo    MAINTENANCE
echo ========================================
echo.
echo [1] üßπ Nettoyer les fichiers temporaires
echo [2] üìä Analyser les logs
echo [3] üîÑ Red√©marrer les services
echo [4] üíæ Optimiser la base de donn√©es
echo [5] üîô Retour au menu principal
echo.
set /p maint_choice="Votre choix (1-5): "

if "%maint_choice%"=="1" call :CLEAN_TEMP
if "%maint_choice%"=="2" call :ANALYZE_LOGS
if "%maint_choice%"=="3" call :RESTART_SERVICES
if "%maint_choice%"=="4" call :OPTIMIZE_DB
if "%maint_choice%"=="5" goto MENU

pause
goto MENU

:: ========================================
:: FONCTIONS
:: ========================================

:SYSTEM_CHECK_FUNC
echo üîç V√©rification de Node.js...
where node >nul 2>nul
if !errorlevel! neq 0 (
    echo ‚ùå Node.js n'est pas install√© !
    echo    T√©l√©chargez-le depuis: https://nodejs.org/
    exit /b 1
)
for /f "tokens=*" %%i in ('node --version') do set NODE_VERSION=%%i
echo ‚úÖ Node.js !NODE_VERSION! d√©tect√©

echo üîç V√©rification de npm...
where npm >nul 2>nul
if !errorlevel! neq 0 (
    echo ‚ùå npm n'est pas install√© !
    exit /b 1
)
for /f "tokens=*" %%i in ('npm --version') do set NPM_VERSION=%%i
echo ‚úÖ npm !NPM_VERSION! d√©tect√©

echo üîç V√©rification de l'espace disque...
for /f "tokens=3" %%i in ('dir /-c ^| find "bytes free"') do set FREE_SPACE=%%i
echo ‚úÖ Espace libre : !FREE_SPACE! bytes

echo üîç V√©rification du port %PORT%...
netstat -an | find ":%PORT%" | find "LISTENING" >nul
if !errorlevel! equ 0 (
    echo ‚ö†Ô∏è  Port %PORT% occup√© (sera lib√©r√© automatiquement)
) else (
    echo ‚úÖ Port %PORT% disponible
)

exit /b 0

:CREATE_BACKUP_FUNC
echo üì¶ Cr√©ation de la sauvegarde...
if not exist "%BACKUP_DIR%" mkdir "%BACKUP_DIR%"

set "TIMESTAMP=%date:~-4,4%-%date:~-10,2%-%date:~-7,2%_%time:~0,2%-%time:~3,2%-%time:~6,2%"
set "TIMESTAMP=!TIMESTAMP: =0!"
set "BACKUP_NAME=backup_%TIMESTAMP%"

echo Sauvegarde de la base de donn√©es...
if exist "data\supchaissac.db" (
    copy "data\supchaissac.db" "%BACKUP_DIR%\%BACKUP_NAME%.db" >nul
    echo ‚úÖ Base de donn√©es sauvegard√©e : %BACKUP_NAME%.db
)

echo Sauvegarde des uploads...
if exist "uploads" (
    xcopy "uploads" "%BACKUP_DIR%\%BACKUP_NAME%_uploads\" /E /I /Q >nul
    echo ‚úÖ Fichiers uploads sauvegard√©s
)

echo ‚úÖ Sauvegarde termin√©e dans %BACKUP_DIR%\
exit /b 0

:CLEAN_PORT
echo üßπ Lib√©ration du port %PORT%...
for /f "tokens=5" %%a in ('netstat -aon ^| find ":%PORT%" ^| find "LISTENING" 2^>nul') do (
    echo Arr√™t du processus PID: %%a
    taskkill /F /PID %%a >nul 2>&1
)
echo ‚úÖ Port %PORT% lib√©r√©
exit /b 0

:INSTALL_DEPS
echo üì¶ Installation/v√©rification des d√©pendances...
call npm install
if !errorlevel! neq 0 (
    echo ‚ùå Erreur lors de l'installation des d√©pendances.
    exit /b 1
)
echo ‚úÖ D√©pendances install√©es
exit /b 0

:START_APP
echo üöÄ D√©marrage de l'application...
echo.
echo ========================================
echo    APPLICATION EN COURS D'EXECUTION
echo    URL: http://localhost:%PORT%
echo    Appuyez sur Ctrl+C pour arr√™ter
echo ========================================
echo.

timeout /t 3 /nobreak >nul
start http://localhost:%PORT%

call npm run dev
exit /b 0

:SECURITY_CHECK
echo üîê V√©rification de s√©curit√©...
echo ‚ö†Ô∏è  V√©rifiez que les variables d'environnement sont configur√©es
echo ‚ö†Ô∏è  V√©rifiez que les mots de passe sont s√©curis√©s
echo ‚ö†Ô∏è  V√©rifiez que HTTPS est activ√© en production
exit /b 0

:PRODUCTION_BUILD
echo üèóÔ∏è  Build de production...
call npm run build
exit /b 0

:START_PRODUCTION
echo üåê D√©marrage en mode production...
set NODE_ENV=production
call npm start
exit /b 0

:CLEAN_TEMP
echo üßπ Nettoyage des fichiers temporaires...
if exist "tmp" rmdir /s /q "tmp" 2>nul
if exist "node_modules\.cache" rmdir /s /q "node_modules\.cache" 2>nul
echo ‚úÖ Fichiers temporaires nettoy√©s
exit /b 0

:ANALYZE_LOGS
echo üìä Analyse des logs...
if exist "logs" (
    echo Derni√®res erreurs :
    findstr /i "error" logs\*.log 2>nul | tail -10
) else (
    echo Aucun fichier de log trouv√©
)
exit /b 0

:RESTART_SERVICES
echo üîÑ Red√©marrage des services...
call :CLEAN_PORT
echo ‚úÖ Services red√©marr√©s
exit /b 0

:OPTIMIZE_DB
echo üíæ Optimisation de la base de donn√©es...
if exist "data\supchaissac.db" (
    echo Base de donn√©es SQLite d√©tect√©e
    echo Optimisation en cours...
    node -e "const db = require('better-sqlite3')('data/supchaissac.db'); db.pragma('optimize'); db.close();" 2>nul
    echo ‚úÖ Base de donn√©es optimis√©e
) else (
    echo Aucune base de donn√©es locale trouv√©e
)
exit /b 0

:EXIT
echo.
echo ========================================
echo    Merci d'avoir utilis√© %APP_NAME% !
echo ========================================
echo.
exit /b 0
